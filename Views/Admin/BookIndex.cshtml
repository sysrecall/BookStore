@model List<BookStore.Models.Store.Book>

@{
    ViewBag.Title = "Book List";
    Layout = "~/Views/Shared/Admin/_SideNav.cshtml";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<style>

    body[data-bs-theme="light"] {
        background-color: #f5f5f5;
        color: #000;
    }

    body[data-bs-theme="dark"] {
        background-color: #1e1e2f;
        color: #f8f9fa;
    }

    [data-bs-theme="dark"] thead {
        background-color: #696969;
        color: #f8f9fa;
        /*        border-color: #444;*/
    }

    [data-bs-theme="dark"] .table-bordered th,
    [data-bs-theme="dark"] .table-bordered td {
        border-color: rgba(255, 255, 255, 0.1);
    }

    [data-bs-theme="dark"] .input-group-text {
        background-color: #2c2c3d;
        color: #ccc;
        border-color: rgba(255, 255, 255, 0.1);
    }

    [data-bs-theme="dark"] .form-control {
        background-color: #2c2c3d;
        color: #ccc;
        border-color: rgba(255, 255, 255, 0.1);
    }
    .card-header {
        background-color: #555657;
        color: #ffffff;
    }
    
</style>


<div class="container-fluid px-4">
    <h4 class="mb-4">Book List</h4>

    <div class="card shadow-sm">
        <div class="card-header  d-flex justify-content-between align-items-center">
            <div class="input-group w-50">
                <span class="input-group-text "><i class="fas fa-search"></i></span>
                <input type="text" class="form-control" placeholder="Search..." id="bookSearch">
            </div>
            <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createBookModal">
                Add Books
            </button>
        </div>

        <div class="card-body">
            <div class="card-body">
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Image</th>
                            <th>Title</th>
                            <th>Author</th>
                            <th>Publisher</th>
                            <th>Year</th>
                            <th>Pages</th>
                            <th>Edition</th>
                            <th>Price</th>
                            <th>Description</th>
                            <th>Type</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="bookTable">
                        @if (Model != null && Model.Any())
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @if (item.BookCoverImages != null && item.BookCoverImages.Any())
                                        {
                                            var base64Image = item.BookCoverImages.First();
                                            <img src="data:~image/jpg;base64,@base64Image" alt="@item.Title" class="img-fluid" style="max-height: 50px;" />
                                        }
                                        else
                                        {
                                            <span>No Image</span>
                                        }
                                    </td>

                                    <td>@item.Title</td>
                                    <td>@item.Author</td>
                                    <td>@item.Publisher</td>
                                    <td>@item.PublicationYear</td>
                                    <td>@item.Pages</td>
                                    <td>@item.Edition</td>
                                    <td>@item.Price</td>
                                    <td>@item.Description</td>
                                    <td>@item.BookType</td>
                                    <td class="text-center">
                                        <a href="@Url.Action("Edit", new { id = item.ID })" class="btn btn-sm btn-primary me-1">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a href="@Url.Action("DeleteBook", new { id = item.ID })" class="btn btn-sm btn-danger">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="11" class="text-center">No data available.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>

    </div>
</div>
@*book modal*@
<div class="modal fade" id="createBookModal" tabindex="-1" role="dialog" aria-labelledby="createBookModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <!-- large modal for more fields -->
        <div class="modal-content">
            <div class="modal-header d-flex justify-content-between align-items-center">
                <h5 class="modal-title" id="createBookModalLabel">Create New Book</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AddBooks", "Admin", FormMethod.Post))
                {
                    <div class="row g-3">
                        <div class="col-md-6">
                            @Html.Label("Title")
                            @Html.TextBox("Title", null, new { @class = "form-control" })
                            @Html.ValidationMessage("Title", "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Author")
                            @Html.TextBox("Author", null, new { @class = "form-control" })
                            @Html.ValidationMessage("Author", "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Publisher")
                            @Html.TextBox("Publisher", null, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Publication Year")
                            @Html.TextBox("PublicationYear", null, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Pages")
                            @Html.TextBox("Pages", null, new { @class = "form-control", type = "number" })
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Edition")
                            @Html.TextBox("Edition", null, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Price")
                            @Html.TextBox("Price", null, new { @class = "form-control", type = "number", step = "0.01" })
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Book Type")
                            @Html.TextBox("BookType", null, new { @class = "form-control" })
                        </div>
                        <div class="col-12">
                            @Html.Label("Description")
                            @Html.TextArea("Description", null, new { @class = "form-control", rows = 3 })
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Book Cover Images")
                            <input type="file" class="form-control" name="image" />
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <input type="submit" value="Create Book" class="btn btn-success" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('bookSearch');
            const tableRows = document.querySelectorAll('#bookTable tr');

            searchInput.addEventListener('keyup', function () {
                const query = this.value.toLowerCase();

                tableRows.forEach(row => {
                    const rowText = row.textContent.toLowerCase();
                    row.style.display = rowText.includes(query) ? '' : 'none';
                });
            });

            // Initialize createBookModal with static backdrop and disabled keyboard
            const createBookModalEl = document.getElementById('createBookModal');
            if (createBookModalEl) {
                const modal = new bootstrap.Modal(createBookModalEl, {
                    backdrop: 'static',
                    keyboard: false
                });

                // Optional: Automatically show modal if needed
                // modal.show();
            }
        });
    </script>
}
