@model BookStore.ViewModels.ReportViewModel

@{
    ViewBag.Title = "Report";
    Layout = "~/Views/Shared/Admin/_SideNav.cshtml";
}



<style>
    .body {
        background-color: #343434;
    }

    .main-content {
        padding: 20px;
    }

    .card {
        margin-bottom: 20px;
    }

    .sales-amount {
        font-size: 2rem;
        font-weight: bold;
        color: #007bff;
    }

    .category-bar {
        background-color: #007bff;
        height: 20px;
        border-radius: 5px;
    }

    .trend-percentage {
        color: #28a745;
        font-weight: bold;
    }

    .low-stock {
        border-left: 4px solid #ffc107;
        padding-left: 10px;
    }

    .out-of-stock {
        border-left: 4px solid #dc3545;
        padding-left: 10px;
    }

    .restocked {
        border-left: 4px solid #28a745;
        padding-left: 10px;
    }

    .stats-card {
        text-align: center;
        padding: 10px;
    }
</style>
@{var currentDate = DateTime.Now.ToString("d");}

<div class="container-fluid">
    <div class="main-content">
        <div class="d-flex justify-content-between mb-3">
            <h2>Reports</h2>
            <div>
                <button class="btn btn-outline-secondary btn-sm me-2">Export</button>
                <button class="btn btn-outline-secondary btn-sm">Share</button>
            </div>
        </div>

        <!-- Tabs -->
        <ul class="nav nav-tabs mb-3" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="salesReport-tab" data-bs-toggle="tab" data-bs-target="#salesReport" type="button" role="tab" aria-controls="salesReport" aria-selected="true">Monthly Sales Report</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="inventoryStatus-tab" data-bs-toggle="tab" data-bs-target="#inventoryStatus" type="button" role="tab" aria-controls="inventoryStatus" aria-selected="false">Inventory Status</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="userActivity-tab" data-bs-toggle="tab" data-bs-target="#userActivity" type="button" role="tab" aria-controls="userActivity" aria-selected="false">User Activity Report</button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content" id="myTabContent">
            <!-- Monthly Sales Report Tab -->
            <div class="tab-pane fade show active" id="salesReport" role="tabpanel" aria-labelledby="salesReport-tab">
                <p class="text-muted">Generated on @currentDate</p>


                <!-- Total Sales -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5>Total Sales</h5>
                                <p class="sales-amount">@Model.TotalSales</p>
                            </div>
                            <button class="btn btn-outline-primary btn-sm" onclick="exportReport('monthlySales')">Export</button>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- Sales by Category -->
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>Sales by Category</h5>
                                <div class="mb-3">
                                    <div class="d-flex justify-content-between">
                                        <span>Fiction</span>
                                        <span>@Model.SalesByCategory</span>
                                    </div>
                                    <div class="progress">
                                        <div class="category-bar progress-bar" style="width: 70%;"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Top Selling Books -->
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>Top Selling Books</h5>
                                <ol>
                                    @foreach (var book in Model.TopSellingBooks)
                                    {
                                        <li>
                                            <div class="d-flex justify-content-between">
                                                @*<span>@book.Title</span>
                                                <span>@book.Copies copies</span>*@
                                            </div>
                                        </li>
                                    }
                                </ol>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Monthly Sales Trend -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5>Monthly Sales Trend</h5>
                            <span class="trend-percentage">+12.5%</span>
                        </div>
                        <p class="text-muted">[Graph placeholder]</p>
                    </div>
                </div>
            </div>

            <!-- Inventory Status Tab -->
            <div class="tab-pane fade" id="inventoryStatus" role="tabpanel" aria-labelledby="inventoryStatus-tab">
                <p class="text-muted">Generated on @DateTime.Now.ToString("MMMM dd, yyyy")</p>

                <!-- Total Books in Inventory -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5>Total Books in Inventory</h5>
                                <p class="sales-amount">@Model.BookCount</p> <!-- Display total number of books -->
                            </div>
                            <button class="btn btn-outline-primary btn-sm" onclick="exportInventoryStatus()">Export</button>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- Low Stock Items -->
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>Low Stock Items</h5>
                                @if (Model.LowStockItems.Any())
                                {
                                    foreach (var item in Model.LowStockItems)
                                    {
                                        <div class="low-stock mb-3">
                                            <div class="d-flex justify-content-between">
                                                <span>@item.Title</span>
                                                @*<span>@(item.Stock ?? 0) left in stock</span>*@
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p>No low stock items.</p>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Out of Stock Items -->
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>Out of Stock Items</h5>
                                @if (Model.OutOfStockItems.Any())
                                {
                                    foreach (var item in Model.OutOfStockItems)
                                    {
                                        <div class="out-of-stock mb-3">
                                            <div class="d-flex justify-content-between">
                                                <span>@item.Title</span>
                                                <span>by @item.Author</span> <!-- Assuming you have an Author property -->
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p>No out of stock items.</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recently Restocked Items -->
                <div class="card">
                    <div class="card-body">
                        <h5>Recently Restocked Items</h5>
                        <div class="restocked mb-3">
                            <p>No recently restocked items available.</p> <!-- Placeholder for now -->
                        </div>
                    </div>
                </div>

                <!-- Summary Stats -->
                <div class="row">
                    <div class="col-md-4">
                        <div class="card stats-card">
                            <h5>@Model.UniqueTitlesCount</h5>
                            <p>Unique Titles</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card stats-card">
                            <h5>@Model.LowStockItems.Count()</h5>
                            <p>Low Stock Items</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card stats-card">
                            <h5>@Model.OutOfStockItems.Count()</h5>
                            <p>Out of Stock Items</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- User Activity Report Tab -->
            <div class="tab-pane fade" id="userActivity" role="tabpanel" aria-labelledby="userActivity-tab">
                <!-- User Activity Report Content -->
                <p class="text-muted">Generated on @currentDate</p>

                <div class="row">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>Total Users</h5>
                                <p class="sales-amount">@Model.TotalUsers</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>Active Users</h5>
                                <p class="sales-amount">@Model.ActiveUsers</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>New Users This Month</h5>
                                <p class="sales-amount">@Model.NewUsersThisMonth</p>
                            </div>
                        </div>
                    </div>
                    @*<div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>User Engagement</h5>
                                <p class="sales-amount">a</p>
                            </div>
                        </div>
                    </div>*@
                </div>

                <div class="card">
                    <div class="card-body">
                        <h5>Most Active Users</h5>
                        <ol>
                            @foreach (var user in Model.MostActiveUsers)
                            {
                                <li>
                                    <div class="d-flex justify-content-between">
                                        <span>@user.FullName</span>
                                        <span>@(user.Books?.Count ?? 0) actions</span>
                                    </div>
                                </li>
                            }
                        </ol>
                    </div>
                </div>

                <!--<div class="card">
                    <div class="card-body">
                        <h5>Recent Logins</h5>
                        <ol>-->
                            @*@foreach (var login in Model.RecentLogins)
                                {*@
                            <!--<li>
                                <div class="d-flex justify-content-between">
                                    <span>a</span>
                                    <span>a</span>
                                </div>
                            </li>-->
                            @*}*@
                        <!--</ol>
                    </div>
                </div>-->

            </div>
        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>


@section Scripts {
    <script>
    async function exportReport(reportType) {
        if (reportType !== 'monthlySales') {
            alert("Unsupported report type");
            return;
        }

        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();

        // Sample monthly sales data
        const salesData = [
            { month: "January", sales: 1200 },
            { month: "February", sales: 1500 },
            { month: "March", sales: 1700 },
            { month: "April", sales: 1600 },
            { month: "May", sales: 1900 },
        ];

        // Title
        doc.setFontSize(18);
        doc.text("Monthly Sales Report", 20, 20);
        doc.setFontSize(12);
        doc.text("Generated on: " + new Date().toLocaleDateString(), 20, 30);

        // Table Header
        let y = 50;
        doc.setFontSize(14);
        doc.text("Month", 20, y);
        doc.text("Sales ($)", 100, y);
        y += 10;

        // Table Rows
        doc.setFontSize(12);
        salesData.forEach(item => {
            doc.text(item.month, 20, y);
            doc.text(item.sales.toString(), 100, y);
            y += 10;
        });

        // Save as PDF
        const filename = `invoice_monthlySales_${new Date().toISOString().slice(0, 10)}.pdf`;
        doc.save(filename);
    }


    async function exportInventoryStatus() {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();

        const today = new Date().toLocaleDateString();
        let y = 20;

        // Title and Date
        doc.setFontSize(16);
        doc.text("Inventory Status Report", 20, y);
        doc.setFontSize(10);
        doc.text(`Generated on ${today}`, 20, y + 6);
        y += 16;

        // Fetch data from DOM
        const bookCount = document.querySelector(".sales-amount")?.innerText || "N/A";
        const uniqueTitles = document.querySelector(".stats-card:nth-child(1) h5")?.innerText || "N/A";
        const lowStockCount = document.querySelector(".stats-card:nth-child(2) h5")?.innerText || "N/A";
        const outOfStockCount = document.querySelector(".stats-card:nth-child(3) h5")?.innerText || "N/A";

        // Total Books
        doc.setFontSize(12);
        doc.text("Total Books in Inventory: " + bookCount, 20, y);
        y += 10;

        // Low Stock Items
        doc.text("Low Stock Items:", 20, y);
        y += 8;
        const lowStockElements = document.querySelectorAll(".low-stock span:first-child");
        if (lowStockElements.length > 0) {
            lowStockElements.forEach(el => {
                doc.text("- " + el.innerText, 25, y);
                y += 6;
            });
        } else {
            doc.text("None", 25, y);
            y += 6;
        }

        // Out of Stock Items
        y += 4;
        doc.text("Out of Stock Items:", 20, y);
        y += 8;
        const outOfStockElements = document.querySelectorAll(".out-of-stock");
        if (outOfStockElements.length > 0) {
            outOfStockElements.forEach(el => {
                const spans = el.querySelectorAll("span");
                if (spans.length >= 2) {
                    doc.text(`- ${spans[0].innerText} by ${spans[1].innerText}`, 25, y);
                    y += 6;
                }
            });
        } else {
            doc.text("None", 25, y);
            y += 6;
        }

        // Recently Restocked Items Placeholder
        y += 4;
        doc.text("Recently Restocked Items:", 20, y);
        y += 8;
        const restockedText = document.querySelector(".restocked p")?.innerText || "No recently restocked items.";
        doc.text(restockedText, 25, y);
        y += 10;

        // Summary Stats
        doc.text("Summary:", 20, y);
        y += 8;
        doc.text(`- Unique Titles: ${uniqueTitles}`, 25, y);
        y += 6;
        doc.text(`- Low Stock Items: ${lowStockCount}`, 25, y);
        y += 6;
        doc.text(`- Out of Stock Items: ${outOfStockCount}`, 25, y);

        // Save as PDF
        const filename = `Inventory_Status_Report_${new Date().toISOString().slice(0, 10)}.pdf`;
        doc.save(filename);
    }
    </script>


}