@model BookStore.ViewModels.ReportViewModel

@{
    ViewBag.Title = "Report";
    Layout = "~/Views/Shared/Admin/_SideNav.cshtml";
}



<style>
    .body {
        background-color: #343434;
    }

    .main-content {
        padding: 20px;
    }

    .card {
        margin-bottom: 20px;
    }

    .sales-amount {
        font-size: 2rem;
        font-weight: bold;
        color: #007bff;
    }

    .category-bar {
        background-color: #007bff;
        height: 20px;
        border-radius: 5px;
    }

    .trend-percentage {
        color: #28a745;
        font-weight: bold;
    }

    .low-stock {
        border-left: 4px solid #ffc107;
        padding-left: 10px;
    }

    .out-of-stock {
        border-left: 4px solid #dc3545;
        padding-left: 10px;
    }

    .restocked {
        border-left: 4px solid #28a745;
        padding-left: 10px;
    }

    .stats-card {
        text-align: center;
        padding: 10px;
    }
    .sales-amount {
        color: #75ACB0; /* Add this line to set the text color */
    }
</style>
@{var currentDate = DateTime.Now.ToString("d");}

<div class="container-fluid">
    <div class="main-content">
        <div class="d-flex justify-content-between mb-3">
            @*<h2>Reports</h2>*@
            @*<div>
                <button class="btn btn-outline-secondary btn-sm me-2">Export</button>
                <button class="btn btn-outline-secondary btn-sm">Share</button>
            </div>*@
        </div>

        <!-- Tabs -->
        <ul class="nav nav-tabs mb-3" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="salesReport-tab" data-bs-toggle="tab" data-bs-target="#salesReport" type="button" role="tab" aria-controls="salesReport" aria-selected="true"> Sales Report</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="inventoryStatus-tab" data-bs-toggle="tab" data-bs-target="#inventoryStatus" type="button" role="tab" aria-controls="inventoryStatus" aria-selected="false">Inventory Status</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="userActivity-tab" data-bs-toggle="tab" data-bs-target="#userActivity" type="button" role="tab" aria-controls="userActivity" aria-selected="false">User Activity Report</button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content" id="myTabContent">
            <!--  Sales Report Tab -->
            <div class="tab-pane fade show active" id="salesReport" role="tabpanel" aria-labelledby="salesReport-tab">
                <p class="text-muted">Generated on @currentDate</p>


                <!-- Total Sales -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5>Total Sales</h5>
                                <p class="sales-amount">@Model.TotalSales $</p>
                            </div>
                            <button class="btn btn-outline-primary btn-sm" onclick="exportReport('monthlySales')">Export</button>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- Sales by Category -->
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Sales by Category</h5>
                                @if (Model.SalesByCategory != null && Model.SalesByCategory.Any())
                                {
                                    foreach (var category in Model.SalesByCategory)
                                    {
                                        <div class="mb-2">
                                            <div class="d-flex justify-content-between">
                                                <span>@category.Key</span>
                                                <span>@category.Value.ToString("C")</span>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p>No sales data available.</p>
                                }
                            </div>
                        </div>
                    </div>



                    <!-- Top Selling Books -->
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>Top Selling Books</h5>
                                <ol class="ps-3">
                                    @foreach (var title in Model.TopSellingBooks)
                                    {
                                        <li class="mb-1">
                                            <div class="d-flex justify-content-between">
                                                <span>@title</span>
                                                @* Optional placeholder if you have copies sold:
                                    <span>12 copies</span> *@
                                            </div>
                                        </li>
                                    }
                                </ol>
                            </div>
                        </div>
                    </div>



                </div>

                <!-- Monthly Sales Trend -->
                @*<div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5>Monthly Sales Trend</h5>
                            <span class="trend-percentage">+12.5%</span>
                        </div>
                        <p class="text-muted">[Graph placeholder]</p>
                    </div>
                </div>*@
            </div>

            <!-- Inventory Status Tab -->
            <div class="tab-pane fade" id="inventoryStatus" role="tabpanel" aria-labelledby="inventoryStatus-tab">
                <p class="text-muted">Generated on @DateTime.Now.ToString("MMMM dd, yyyy")</p>

                <!-- Total Books in Inventory -->
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5>Total Books in Inventory</h5>
                                <p class="sales-amount">@Model.BookCount</p> <!-- Display total number of books -->
                            </div>
                            <button class="btn btn-outline-primary btn-sm" onclick="exportInventoryStatus()">Export</button>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- Low Stock Items -->
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                <h5>Low Stock Items</h5>
                                @if (Model.LowStockItems.Any())
                                {
                                    foreach (var item in Model.LowStockItems)
                                    {
                                        <div class="low-stock mb-3">
                                            <div class="d-flex justify-content-between">
                                                <span>@item.Title</span>
                                                @*<span>@(item.Stock ?? 0) left in stock</span>*@
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p>No low stock items.</p>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Out of Stock Items -->
                    @*<div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>Out of Stock Items</h5>
                                @if (Model.OutOfStockItems.Any())
                                {
                                    foreach (var item in Model.OutOfStockItems)
                                    {
                                        <div class="out-of-stock mb-3">
                                            <div class="d-flex justify-content-between">
                                                <span>@item.Title</span>
                                                <span>by @item.Author</span> 
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p>No out of stock items.</p>
                                }
                            </div>
                        </div>
                    </div>*@
                </div>

                <!-- Recently Restocked Items -->
                @*<div class="card">
                    <div class="card-body">
                        <h5>Recently Restocked Items</h5>
                        <div class="restocked mb-3">
                            <p>No recently restocked items available.</p> 
                        </div>
                    </div>
                </div>*@

                <!-- Summary Stats -->
                <div class="row">
                    <div class="col-md-6">
                        <div class="card stats-card">
                            <h5>@Model.UniqueTitlesCount</h5>
                            <p>Unique Titles</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card stats-card">
                            <h5>@Model.LowStockItems.Count()</h5>
                            <p>Low Stock Items</p>
                        </div>
                    </div>
                    
                </div>
            </div>

            <!-- User Activity Report Tab -->
            <div class="tab-pane fade" id="userActivity" role="tabpanel" aria-labelledby="userActivity-tab">
                <!-- User Activity Report Content -->
                <p class="text-muted">Generated on @currentDate</p>

                <div class="row">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>Total Users</h5>
                                <p class="sales-amount">@Model.TotalUsers</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <h5>Active Users</h5>
                                <p class="sales-amount">@Model.ActiveUsers</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                <h5>New Users This Month</h5>
                                <p class="sales-amount">@Model.NewUsersThisMonth</p>
                            </div>
                        </div>
                    </div>
                    @*<div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5>User Engagement</h5>
                        <p class="sales-amount">a</p>
                    </div>
                </div>
            </div>*@
                </div>

                @*<div class="card">
                    <div class="card-body">
                        <h5>Most Active Users</h5>
                        <ol>
                            @foreach (var user in Model.MostActiveUsers)
                            {
                                <li>
                                    <div class="d-flex justify-content-between">
                                        <span>@user.FullName</span>
                                        <span>@(user.Books?.Count ?? 0) actions</span>
                                    </div>
                                </li>
                            }
                        </ol>
                    </div>
                </div>*@
                <div class="card">
                    <div class="card-body">
                        <h5>Most Active Users</h5>
                        <ol>
                            @foreach (var user in Model.MostActiveUsers)
                            {
                                <li>
                                    <div class="d-flex justify-content-between">
                                        <span>@user.FullName </span>
                                        <span>@user.Books.Count books purchased</span>
                                    </div>
                                </li>
                            }
                        </ol>
                    </div>
                </div>


                <!--<div class="card">
        <div class="card-body">
            <h5>Recent Logins</h5>
            <ol>-->
                @*@foreach (var login in Model.RecentLogins)
        {*@
                <!--<li>
        <div class="d-flex justify-content-between">
            <span>a</span>
            <span>a</span>
        </div>
    </li>-->
                @*}*@
                <!--</ol>
        </div>
    </div>-->

            </div>
        </div>
    </div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>


@section Scripts {
    <script>
         function exportReport(reportType) {
            if (reportType !== 'monthlySales') {
                alert("Unsupported report type");
                return;
            }

            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Set document properties
            doc.setProperties({
                title: 'Monthly Sales Report',
                subject: 'BookStore Sales Analysis',
                author: 'BookStore Admin',
                keywords: 'sales, report, bookstore',
                creator: 'BookStore Management System'
            });

            // Title section
            doc.setFontSize(18);
            doc.setTextColor(40, 40, 40);
            doc.text("Monthly Sales Report", 105, 20, { align: 'center' });

            doc.setFontSize(12);
            doc.setTextColor(100, 100, 100);
            const generatedDate = document.querySelector(".text-muted")?.innerText || new Date().toLocaleDateString();
            doc.text(generatedDate, 105, 30, { align: 'center' });

            doc.setDrawColor(200, 200, 200);
            doc.line(20, 35, 190, 35);

            // Total Sales section
            doc.setFontSize(14);
            doc.setTextColor(40, 40, 40);
            doc.text("Total Sales:", 20, 50);

            doc.setFontSize(16);
            doc.setTextColor(0, 100, 0);
            const totalSales = document.querySelector(".sales-amount")?.innerText || "N/A";
            doc.text(totalSales, 100, 50);

            // Sales by Category section
            doc.setFontSize(14);
            doc.setTextColor(40, 40, 40);
            doc.text("Sales by Category:", 20, 70);

            doc.setFontSize(12);
            let yPosition = 80;

            const categoryItems = document.querySelectorAll(".col-md-6 .mb-2");
            if (categoryItems.length > 0) {
                categoryItems.forEach(item => {
                    const categoryName = item.querySelector("span:nth-child(1)")?.innerText || "Unknown";
                    const categoryValue = item.querySelector("span:nth-child(2)")?.innerText || "N/A";

                    doc.setTextColor(40, 40, 40);
                    doc.text(`${categoryName}:`, 20, yPosition);
                    doc.setTextColor(0, 100, 0);
                    doc.text(categoryValue, 100, yPosition);

                    yPosition += 10;
                });
            } else {
                doc.text("No category data available", 20, yPosition);
                yPosition += 10;
            }

            // Top Selling Books section
            doc.setFontSize(14);
            doc.setTextColor(40, 40, 40);
            doc.text("Top Selling Books:", 20, yPosition + 10);

            doc.setFontSize(12);
            yPosition += 20;

            const bookItems = document.querySelectorAll(".ps-3 li");
            if (bookItems.length > 0) {
                bookItems.forEach((item, index) => {
                    const bookTitle = item.querySelector("span:nth-child(1)")?.innerText || "Unknown Book";
                    doc.text(`${index + 1}. ${bookTitle}`, 20, yPosition);
                    yPosition += 10;
                });
            } else {
                doc.text("No top selling books data available", 20, yPosition);
                yPosition += 10;
            }

            // Footer
            doc.setFontSize(10);
            doc.setTextColor(150, 150, 150);
            doc.text("Generated by BookStore Management System", 105, 290, { align: 'center' });

            // Save PDF
            const filename = `BookStore_Sales_Report_${new Date().toISOString().slice(0, 10)}.pdf`;
            doc.save(filename);
        }

         function exportInventoryStatus() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Set document properties
            doc.setProperties({
                title: 'Inventory Status Report',
                subject: 'BookStore Inventory Analysis',
                author: 'BookStore Admin',
                keywords: 'inventory, report, bookstore',
                creator: 'BookStore Management System'
            });

            // Title section
            doc.setFontSize(18);
            doc.setTextColor(40, 40, 40);
            doc.text("Inventory Status Report", 105, 20, { align: 'center' });

            doc.setFontSize(12);
            doc.setTextColor(100, 100, 100);
            const generatedDate = document.querySelector("#inventoryStatus .text-muted")?.innerText || new Date().toLocaleDateString();
            doc.text(generatedDate, 105, 30, { align: 'center' });

            doc.setDrawColor(200, 200, 200);
            doc.line(20, 35, 190, 35);

            // Total Books section
            doc.setFontSize(14);
            doc.setTextColor(40, 40, 40);
            doc.text("Total Books in Inventory:", 20, 50);

            doc.setFontSize(14);
            doc.setTextColor(0, 100, 0);
            const bookCount = document.querySelector("#inventoryStatus .sales-amount")?.innerText || "N/A";
            doc.text(bookCount, 100, 50);

            // Low Stock Items section
            doc.setFontSize(14);
            doc.setTextColor(40, 40, 40);
            doc.text("Low Stock Items:", 20, 70);

            doc.setFontSize(12);
            let yPosition = 80;

            const lowStockItems = document.querySelectorAll("#inventoryStatus .low-stock");
            const lowStockCount = lowStockItems.length; // Get actual count from DOM elements

            if (lowStockCount > 0) {
                lowStockItems.forEach(item => {
                    const title = item.querySelector("span:nth-child(1)")?.innerText || "Unknown Title";
                    doc.text(`- ${title}`, 25, yPosition);
                    yPosition += 7;
                });
            } else {
                doc.text("No low stock items", 25, yPosition);
                yPosition += 7;
            }

            // Summary Stats section
            yPosition += 10;
            doc.setFontSize(14);
            doc.setTextColor(40, 40, 40);
            doc.text("Summary Statistics:", 20, yPosition);

            doc.setFontSize(12);
            yPosition += 10;

            const uniqueTitles = document.querySelector("#inventoryStatus .stats-card:nth-child(1) h5")?.innerText || "N/A";

            // Use the actual count we got from DOM elements
            doc.text(`- Unique Titles: ${uniqueTitles}`, 25, yPosition);
            yPosition += 7;
            doc.text(`- Low Stock Items: ${lowStockCount}`, 25, yPosition); // Fixed: Using actual count
            yPosition += 7;

            // Footer
            doc.setFontSize(10);
            doc.setTextColor(150, 150, 150);
            doc.text("Generated by BookStore Management System", 105, 290, { align: 'center' });

            // Save PDF
            const filename = `BookStore_Inventory_Report_${new Date().toISOString().slice(0, 10)}.pdf`;
            doc.save(filename);
        }
    </script>


}